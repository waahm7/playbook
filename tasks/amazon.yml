- name: Ensure work directory exists
  file:
    dest: "{{ lookup('env', 'HOME') }}/work"
    state: directory
  tags:
    - always
- name: Ensure .aws directory exists
  file:
    dest: "{{ lookup('env', 'HOME') }}/.aws"
    state: directory
  tags:
    - always
- name: Create ~/.aws/config file with specific content
  ansible.builtin.copy:
    dest: "{{ lookup('env', 'HOME') }}/.aws/config"
    content: |
      [profile default]
      s3 =
        preferred_transfer_client=crt
        target_bandwidth=100Gb/s
  tags:
    - always

- name: Check if aws-c-crt directory exists
  stat:
    path: "{{ ansible_env.HOME }}/work/aws-c-crt"
  register: aws_c_crt_dir
  tags:
    - always
- name: Clone aws-c-crt repository 
  git:
    repo: 'git@github.com:waahm7/aws-c-crt.git'
    dest: "{{ lookup('env', 'HOME') }}/work/aws-c-crt"
    clone: yes
    update: no
  when: not aws_c_crt_dir.stat.exists
  tags:
    - always


- name: Check if aws-s3-transfer-manager-rs directory exists
  stat:
    path: "{{ ansible_env.HOME }}/work/aws-s3-transfer-manager-rs"
  register: aws_s3_transfer_manager_rs_dir
  tags:
    - always
- name: Clone aws-s3-transfer-manager-rs repository 
  git:
    repo: 'git@github.com:waahm7/aws-s3-transfer-manager-rs.git'
    dest: "{{ lookup('env', 'HOME') }}/work/aws-s3-transfer-manager-rs"
    clone: yes
    update: no
  when: not aws_s3_transfer_manager_rs_dir.stat.exists
  tags:
    - always

- name: Check if aws-crt-s3-benchmarks directory exists
  stat:
    path: "{{ ansible_env.HOME }}/work/aws-crt-s3-benchmarks"
  register: aws_crt_s3_benchmarks_dir
  tags:
    - always
- name: Clone aws-crt-s3-benchmarks repository 
  git:
    repo: 'git@github.com:waahm7/aws-crt-s3-benchmarks.git'
    dest: "{{ lookup('env', 'HOME') }}/work/aws-crt-s3-benchmarks"
    clone: yes
    update: no
  when: not aws_crt_s3_benchmarks_dir.stat.exists
  tags:
    - always

- name: Install Al2023 tools 
  shell: "{{ lookup('env', 'HOME') }}/work/aws-crt-s3-bechmarks/scripts/install-tools-AL2023.py"
  become: yes
  when: ansible_distribution == 'RedHat'
  tags:
    - always

